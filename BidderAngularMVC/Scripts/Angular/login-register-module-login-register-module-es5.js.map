{"version":3,"sources":["webpack:///./src/app/login-register-module/login-register-module.component.html","webpack:///./src/app/login-register-module/login/login.component.html","webpack:///./src/app/login-register-module/register-user/register-user.component.html","webpack:///./src/app/login-register-module/login-register-module.component.css","webpack:///./src/app/login-register-module/login-register-module.component.ts","webpack:///./src/app/login-register-module/login-register-module.ts","webpack:///./src/app/login-register-module/login/login.component.css","webpack:///./src/app/login-register-module/login/login.component.ts","webpack:///./src/app/login-register-module/register-user/register-user.component.css","webpack:///./src/app/login-register-module/register-user/register-user.component.ts"],"names":[],"mappings":"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","file":"login-register-module-login-register-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-default\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n\\n            <li>\\n                <a routerLinkActive=\\\"active\\\" routerLink=\\\"/user/register\\\">Register User Name</a>\\n            </li>\\n\\n            <li>\\n                <a routerLinkActive=\\\"active\\\" routerLink=\\\"/user/login\\\">Login</a>\\n            </li>\\n\\n        </ul>\\n    </nav>\\n\\n    <router-outlet></router-outlet>\\n    \\n</div>\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"OnSubmit()\\\" class=\\\"form-horizontal\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"></h3>\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.username}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"username\\\">User Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"username\\\" formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.username\\\">\\n                        {{ form_errors.username }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.password}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"password\\\">Password</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"password\\\" formControlName=\\\"password\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.password\\\">\\n                        {{ form_errors.password }}\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-footer\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n        </div>\\n\\n    </div>\\n</form>\"","module.exports = \"<form [formGroup]=\\\"registerUserForm\\\" (ngSubmit)=\\\"OnSubmit()\\\" class=\\\"form-horizontal\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Register User</h3>\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.username}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"username\\\">Unique User Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"username\\\" formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.username\\\">\\n                        {{ form_errors.username }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.first_name}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"first_name\\\">First Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"first_name\\\" formControlName=\\\"first_name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.first_name\\\">\\n                        {{ form_errors.first_name }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.last_name}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"last_name\\\">Last Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"last_name\\\" formControlName=\\\"last_name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.last_name\\\">\\n                        {{ form_errors.last_name }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.email_id}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"email_id\\\">Email</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"email_id\\\" formControlName=\\\"email_id\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.email_id\\\">\\n                        {{ form_errors.email_id }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.mob_number}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"mob_number\\\">Mobile Number</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"mob_number\\\" formControlName=\\\"mob_number\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.mob_number\\\">\\n                        {{ form_errors.mob_number }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error' : form_errors.password}\\\">\\n                <label class=\\\"col-sm-2 control-label\\\" for=\\\"password\\\">Password</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input id=\\\"password\\\" formControlName=\\\"password\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"form_errors.password\\\">\\n                        {{ form_errors.password }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"panel-footer\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Register</button>\\n        </div>\\n    </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLXJlZ2lzdGVyLW1vZHVsZS9sb2dpbi1yZWdpc3Rlci1tb2R1bGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-register-module',\n  templateUrl: './login-register-module.component.html',\n  styleUrls: ['./login-register-module.component.css']\n})\nexport class LoginRegisterModuleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component'\nimport { RegisterUserComponent } from './register-user/register-user.component'\nimport { LoginRegisterModuleComponent } from './login-register-module.component'\n\nconst loginRegisterRoutes: Routes = [\n  {\n    path: '',\n    component: LoginRegisterModuleComponent,\n    children: [\n      { path: 'user/login', component: LoginComponent },\n      { path: 'user/register', component: RegisterUserComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(loginRegisterRoutes),\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent, RegisterUserComponent, LoginRegisterModuleComponent]\n})\nexport class LoginRegisterRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLXJlZ2lzdGVyLW1vZHVsZS9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  form_errors = {\n    'username': '',\n    'password': ''\n  }\n\n  validation_messages = {\n    'username': {\n      'required': 'user name is required.',\n    },\n    'password': {\n      'required': 'password is required.',\n    }\n  }\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n\n    this.OnChanges();\n  }\n\n  PopulateErrorValues() {\n    Object.keys(this.form_errors).forEach(form_control => {\n      if (this.loginForm.controls[form_control].status == 'INVALID') {\n        Object.keys(this.loginForm.controls[form_control].errors).forEach(error_code => {\n          this.form_errors[form_control] += ' ' + this.validation_messages[form_control][error_code];\n        })\n      }\n    })\n  }\n\n  OnChanges() {\n    this.loginForm.valueChanges.subscribe(() => {\n      this.form_errors = {\n        'username': '',\n        'password': ''\n      }\n      if (this.submitted) {\n        this.PopulateErrorValues();\n      }\n    })\n  }\n\n  OnSubmit() {\n    this.submitted = true;\n\n    if (this.loginForm.invalid == true) {\n      this.PopulateErrorValues();\n      return;\n    }\n    else {\n      this.http.post('/api/login', Object.assign(this.loginForm.value)).subscribe(\n        (data: any) => {\n          this.router.navigate(['/home']);\n        },\n        error => {\n          this.form_errors.password = error.error.error;\n        }\n      )\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLXJlZ2lzdGVyLW1vZHVsZS9yZWdpc3Rlci11c2VyL3JlZ2lzdGVyLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\n\nexport class RegisterUserComponent implements OnInit {\n\n  registerUserForm: FormGroup;\n  submitted = false;\n  registered = false;\n  form_errors = {\n    'username': '',\n    'first_name': '',\n    'last_name': '',\n    'email_id': '',\n    'mob_number': '',\n    'password': ''\n  }\n\n  validation_messages = {\n    'username': {\n      'required': 'user name is required.',\n      'minlength': 'user name must have more than 3 characters.',\n      'maxlength': 'user name must be less than 15 characters.'\n    },\n    'first_name': {\n      'required': 'first name is required.',\n      'minlength': 'first name must have more than 4 characters.',\n      'maxlength': 'first name should be less than 15 characters.'\n    },\n    'last_name': {\n      'required': 'last name is required.',\n      'minlength': 'last name must have more than 4 characters.',\n      'maxlength': 'first name should be less than 15 characters.'\n    },\n    'email_id': {\n      'required': 'email id is required.',\n      'email': 'email id wrong format.'\n    },\n    'mob_number': {\n      'required': 'mobile number is required.',\n      'pattern': 'mobile number should be 10 digit numeric value.'\n    },\n    'password': {\n      'required': 'password is required.',\n      'minlength': 'password should be atleast 6 charaters long.',\n      'pattern': 'password should contain one uppercase, one lowercase and one numeric, should not contain special character.'\n    }\n  }\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.registerUserForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n      first_name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(15)]],\n      last_name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(15)]],\n      email_id: ['', [Validators.required, Validators.email]],\n      mob_number: ['', [Validators.required, Validators.pattern(\"[0-9]{10}\")]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]]\n    })\n\n    this.OnChanges();\n  }\n\n  PopulateErrorValues() {\n    Object.keys(this.form_errors).forEach(form_control => {\n      if (this.registerUserForm.controls[form_control].status == 'INVALID') {\n        Object.keys(this.registerUserForm.controls[form_control].errors).forEach(error_code => {\n          this.form_errors[form_control] += ' ' + this.validation_messages[form_control][error_code];\n        })\n      }\n    })\n  }\n\n  OnChanges() {\n    this.registerUserForm.valueChanges.subscribe(() => {\n      this.form_errors = {\n        'username': '',\n        'first_name': '',\n        'last_name': '',\n        'email_id': '',\n        'mob_number': '',\n        'password': ''\n      }\n      if (this.submitted) {\n        this.PopulateErrorValues();\n      }\n    })\n  }\n\n  OnSubmit(): void {\n    this.submitted = true;\n\n    if (this.registerUserForm.invalid == true) {\n      this.PopulateErrorValues();\n      return;\n    }\n    else {\n\n      let postData: any = Object.assign(this.registerUserForm.value);\n      this.http.post('/api/customer/register', postData).subscribe((data: any) => {\n        let path = '/user/' + data.customer.uid;\n        this.router.navigate([path]);\n      }, error => {\n        this.form_errors = error.error;\n      });\n\n\n      this.registered = true;\n\n    }\n  }\n\n}\n"],"sourceRoot":""}